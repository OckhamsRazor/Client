/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import chatroom.Client;
/**
 *
 * @author eecamp
 */
public class ConnectionWindow extends javax.swing.JDialog {

    /**
     * Creates new form ConnectionWindow
     */

    private String  serverIP;
    private int port;
    private Client client;
    private boolean continueToConnect;
    public boolean getConnectionPermission() {return continueToConnect;}
    
    public ConnectionWindow(java.awt.Frame parent, Client c) {
        super(parent, true);
        client = c;
        continueToConnect = false;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        IPText = new javax.swing.JTextField();
        portText = new javax.swing.JTextField();
        connetServer = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("新細明體", 1, 12)); // NOI18N
        jLabel1.setText("IP:");

        jLabel2.setFont(new java.awt.Font("新細明體", 1, 12)); // NOI18N
        jLabel2.setText("port:");

        IPText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IPText.setText("140.112.18.222");
        IPText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPTextActionPerformed(evt);
            }
        });

        portText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        portText.setText("5566");

        connetServer.setText("OK");
        connetServer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connetServerMouseClicked(evt);
            }
        });
        connetServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connetServerActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(connetServer, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IPText, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(portText))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(IPText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(portText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connetServer)
                    .addComponent(cancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IPTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IPTextActionPerformed

    private void connetServerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connetServerMouseClicked
        // TODO add your handling code here:
        parseServerInfo();
    }//GEN-LAST:event_connetServerMouseClicked

    private void cancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelMouseClicked
        // TODO add your handling code here:
        continueToConnect = false;
        setVisible(false);
    }//GEN-LAST:event_cancelMouseClicked

    private void connetServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connetServerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_connetServerActionPerformed
    private void parseServerInfo(){
        serverIP = IPText.getText();
        // check legal port 
        String port_str =portText.getText();
        port = new Integer(port_str).intValue();
        continueToConnect = true;
        client.connect(serverIP,port);
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IPText;
    private javax.swing.JButton cancel;
    private javax.swing.JButton connetServer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField portText;
    // End of variables declaration//GEN-END:variables
}
